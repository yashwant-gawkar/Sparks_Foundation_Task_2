# -*- coding: utf-8 -*-
"""Sparks_Task#2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1caWEyLLHrhDhXuacgoaaxcfvc9a5EzSs

# Name: Yashwant Gawkar
**Sparks Foundation Data Science Intern Task #2 ||
 Prediction Using Unsupervised ML**
"""

import pandas as pd
import matplotlib.pyplot as plt

data=pd.read_csv("https://raw.githubusercontent.com/yashwant-gawkar/Sparks_Foundation_Task_2/main/Iris%20(1).csv")


print("Data imported successfully")
print("DATA:")
data

x = data.iloc[:, 1:-1].values

"""# Plot graph of Within-cluster sum of square(WCSS) vs Number of clusters"""

from sklearn.cluster import KMeans
wcss = []

for i in range(1, 11):
    kmeans = KMeans(n_clusters = i, random_state = 100)
    kmeans.fit(x)
    wcss.append(kmeans.inertia_)
    


plt.plot(range(1, 11), wcss)
plt.title('The elbow method')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS') # Within cluster sum of squares
plt.show()

"""# RESULT
# Since the elbow of the graph is at 3, hence 3 is the optimal number of clusters.

"""

kmeans = KMeans(n_clusters = 3, init = 'k-means++',
                max_iter = 300, n_init = 10, random_state = 100)
y_kmeans = kmeans.fit_predict(x)

"""# Visualization"""

plt.scatter(x[y_kmeans == 0, 0], x[y_kmeans == 0, 1], 
            s = 75, c = 'blue', label = 'Iris-setosa')
plt.scatter(x[y_kmeans == 1, 0], x[y_kmeans == 1, 1], 
            s = 75, c = '#8c564b', label = 'Iris-versicolour')
plt.scatter(x[y_kmeans == 2, 0], x[y_kmeans == 2, 1],
            s = 75, c = '#d62728', label = 'Iris-virginica')

plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:,1], 
            s = 100, c = 'yellow', label = 'Centroids')

plt.legend()

